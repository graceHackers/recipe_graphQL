{"version":3,"sources":["utils/client.js","queries/getRecipes.js","components/RecipesList.js","components/IngredientsForm.js","components/Recipes.js","queries/getRecipeInstruction.js","components/SingleRecipeInstruction.js","queries/getRecipeIngredients.js","components/SingleRecipeIngredients.js","components/SingleRecipe.js","pages/HomePage.js","pages/Routes.js","index.js"],"names":["process","REACT_APP_STEPZEN_API_KEY","REACT_APP_STEPZEN_ENDPOINT","client","ApolloClient","headers","Authorization","uri","GET_RECIPES_QUERY","gql","RecipesList","props","useQuery","variables","ingredients","loading","error","data","recipes","getRecipes","Container","Row","map","recipe","Card","to","pathname","id","title","image","src","IngredientsForm","useState","submitted","setSubmitted","submittedIngredients","setSubmittedIngredients","inputIngredients","setInputIngredients","maxedout","setMaxedout","useEffect","className","Form","onSubmit","evt","preventDefault","stringIngredient","join","console","log","Group","controlId","inputValue","idx","Col","md","sm","xs","Label","Control","name","value","onChange","newArr","target","Button","variant","size","type","onClick","filter","ingredient","index","handleDelete","length","Recipes","GET_RECIPE_INSTRUCTION_QUERY","SingleRecipeInstruction","Number","recipeId","recipeInstruction","getRecipeInstruction","steps","number","step","GET_RECIPE_INGREDIENTS_QUERY","SingleRecipeIngredients","recipeIngredients","getRecipeIngredients","SingleRecipe","match","params","location","Badge","style","fontSize","HomePage","Jumbotron","Body","Title","Link","Routes","Navbar","collapseOnSelect","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","exact","path","component","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab8b7ce2.chunk.js","sourcesContent":["import ApolloClient from \"apollo-boost\"\r\n\r\nconst {\r\n  REACT_APP_STEPZEN_API_KEY,\r\n  REACT_APP_STEPZEN_ENDPOINT\r\n} = process.env\r\n\r\nexport const client = new ApolloClient({\r\n  headers: {\r\n    Authorization: `Apikey ${REACT_APP_STEPZEN_API_KEY}`,\r\n  },\r\n  uri: REACT_APP_STEPZEN_ENDPOINT,\r\n})","import { gql } from \"graphql-tag\";\r\n\r\nexport const GET_RECIPES_QUERY = gql`\r\n  query getRecipes($ingredients: String!) {\r\n    getRecipes(ingredients: $ingredients) {\r\n      id\r\n      title\r\n      image\r\n    }\r\n  }\r\n`;\r\n","import { useQuery } from \"@apollo/react-hooks\";\r\nimport { GET_RECIPES_QUERY } from \"../queries/getRecipes.js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport default function RecipesList(props) {\r\n  const { loading, error, data } = useQuery(GET_RECIPES_QUERY, {\r\n    variables: {\r\n      ingredients: props.ingredients,\r\n    },\r\n  });\r\n  if (error) return `Error! ${error}`;\r\n\r\n  const recipes = data?.getRecipes;\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <h2>Your recipes</h2>\r\n      </Row>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <Row>\r\n          {recipes.map((recipe) => (\r\n            <Card key={recipe.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/recipes/${recipe.id}`,\r\n                  props: { title: recipe.title, image: recipe.image },\r\n                }}\r\n              >\r\n                <p>{recipe.title}</p>\r\n                <img src={recipe.image}></img>\r\n              </Link>\r\n            </Card>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport RecipesList from './RecipesList';\r\nimport { Button, Form, Container, Row, Col } from 'react-bootstrap';\r\n// import Form from 'react-bootstrap/Form';\r\n// import Container from 'react-bootstrap/Container';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function IngredientsForm() {\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [submittedIngredients, setSubmittedIngredients] = useState('');\r\n\r\n  const [inputIngredients, setInputIngredients] = useState([]);\r\n  const [maxedout, setMaxedout] = useState(false);\r\n\r\n  //component did mount\r\n  useEffect(() => {\r\n    setInputIngredients(['']);\r\n  }, []);\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    //['tomato', 'cheese', 'flour'] => 'tomato,+cheese,+flour'\r\n    const stringIngredient = inputIngredients.join(',+');\r\n    console.log('inside submit', stringIngredient);\r\n\r\n    setSubmitted(true);\r\n    setSubmittedIngredients(stringIngredient);\r\n  }\r\n\r\n  function onChange(evt, idx) {\r\n    //create copy of the ingredients array from state\r\n    const newArr = [...inputIngredients];\r\n    //change the element from passed in idx to input value\r\n    newArr[idx] = evt.target.value;\r\n    //set the ingredients array with new array ([\"tomato\"])\r\n    setInputIngredients(newArr);\r\n  }\r\n\r\n  function handleAdd() {\r\n    if (inputIngredients.length < 10) {\r\n      setInputIngredients([...inputIngredients, '']);\r\n    } else {\r\n      setMaxedout(true);\r\n    }\r\n  }\r\n\r\n  function handleDelete(evt, idx) {\r\n    setInputIngredients(\r\n      inputIngredients.filter((ingredient, index) => idx !== index)\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container className='text-center'>\r\n        <Form onSubmit={handleSubmit}>\r\n          {/* <Form.Row> */}\r\n          <Form.Group controlId='formHorizontalEmail'>\r\n            {inputIngredients.map((inputValue, idx) => {\r\n              return (\r\n                <Row\r\n                  key={idx + 1}\r\n                  id='ingredientForm'\r\n                  className='justify-content-center'\r\n                >\r\n                  {/* <label>{`ingredient${idx + 1}`}:</label> */}\r\n                  <Col md sm xs={2}>\r\n                    <Form.Label>\r\n                      {`ingredient${idx + 1}`}:{/* </Form.Label> */}\r\n                    </Form.Label>\r\n                  </Col>\r\n                  <Col md sm xs={4}>\r\n                    <Form.Control\r\n                      // <input\r\n                      name={`ingredient${idx + 1}`}\r\n                      value={inputValue}\r\n                      onChange={(evt) => onChange(evt, idx)}\r\n                      // ></input>\r\n                    />\r\n                  </Col>\r\n                  <Col md sm xs={2}>\r\n                    <Button\r\n                      variant='outline-primary'\r\n                      size='sm'\r\n                      type='button'\r\n                      onClick={(evt) => handleDelete(evt, idx)}\r\n                    >\r\n                      {''}delete\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              );\r\n            })}\r\n            <Button\r\n              className='ml-2 mt-2'\r\n              variant='primary'\r\n              type='button'\r\n              onClick={handleAdd}\r\n            >\r\n              Add\r\n            </Button>\r\n            {''}\r\n            <Button className='ml-2 mt-2' variant='success' type='submit'>\r\n              Submit\r\n            </Button>\r\n\r\n            {maxedout && <p>You can't add anymore. Sorry.</p>}\r\n            {submitted && <RecipesList ingredients={submittedIngredients} />}\r\n          </Form.Group>\r\n          {/* </Form.Row> */}\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import IngredientsForm from './IngredientsForm';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nexport default function Recipes() {\r\n  console.log('Recipes component');\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>What ingredients do you have?</h2>\r\n        <IngredientsForm />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { gql } from \"graphql-tag\";\r\n\r\nexport const GET_RECIPE_INSTRUCTION_QUERY = gql`\r\n  query getRecipeInstruction($recipeId: Int!) {\r\n    getRecipeInstruction(recipeId: $recipeId) {\r\n      number\r\n      step\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { GET_RECIPE_INSTRUCTION_QUERY } from \"../queries/getRecipeInstruction\";\r\n\r\nexport default function SingleRecipeInstruction(props) {\r\n  const id = Number(props.id);\r\n\r\n  const { loading, error, data } = useQuery(GET_RECIPE_INSTRUCTION_QUERY, {\r\n    variables: {\r\n      recipeId: id,\r\n    },\r\n  });\r\n  if (error) return `Error! ${error}`;\r\n\r\n  const recipeInstruction = data?.getRecipeInstruction;\r\n  console.log(\"instruction\", recipeInstruction);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <>\r\n          <p>Instruction:</p>\r\n          {recipeInstruction.map((steps, idx) => {\r\n            return (\r\n              <div key={idx}>\r\n                <p>\r\n                  {steps.number}. {steps.step}\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { gql } from \"graphql-tag\";\r\n\r\nexport const GET_RECIPE_INGREDIENTS_QUERY = gql`\r\n  query getRecipeIngredients($recipeId: Int!) {\r\n    getRecipeIngredients(recipeId: $recipeId) {\r\n      name\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { GET_RECIPE_INGREDIENTS_QUERY } from \"../queries/getRecipeIngredients\";\r\n\r\nexport default function SingleRecipeIngredients(props) {\r\n  const id = Number(props.id);\r\n\r\n  const { loading, error, data } = useQuery(GET_RECIPE_INGREDIENTS_QUERY, {\r\n    variables: {\r\n      recipeId: id,\r\n    },\r\n  });\r\n  if (error) return `Error! ${error}`;\r\n\r\n  const recipeIngredients = data?.getRecipeIngredients;\r\n  console.log(\"ingredients\", recipeIngredients);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <>\r\n          <p>Ingredients:</p>\r\n          {recipeIngredients.map((ingredient, idx) => {\r\n            return (\r\n              <ul key={idx}>\r\n                <li>{ingredient.name}</li>\r\n              </ul>\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SingleRecipeInstruction from \"./SingleRecipeInstruction\";\r\nimport SingleRecipeIngredients from \"./SingleRecipeIngredients\";\r\nimport { Container, Badge } from \"react-bootstrap\";\r\n\r\nexport default function SingleRecipe(props) {\r\n  const id = props.match.params.recipeId;\r\n  const title = props.location.props.title;\r\n  const image = props.location.props.image;\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <Badge variant=\"success\" className=\"mb-3\">\r\n        Recipe ID #{id}\r\n      </Badge>\r\n      <h1 style={{ fontSize: \"2.5rem\" }}>{title}</h1>\r\n      <img src={image} />\r\n      <SingleRecipeIngredients id={id} />\r\n      <hr />\r\n      <SingleRecipeInstruction id={id} />\r\n    </Container>\r\n  );\r\n}\r\n","import { Link } from 'react-router-dom';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <Container id='creators' className='text-center'>\r\n      <Jumbotron >\r\n          <h1>Homepage</h1>\r\n          <p>\r\n            This is where the screenshot will go!\r\n          </p>\r\n          <Link to={'/recipes'}>\r\n            <Button variant=\"info\">Start!</Button>\r\n          </Link>\r\n        </Jumbotron>\r\n\r\n      <Row className='justify-content-center mb-3 mt-5'>\r\n          <h1>Meet our team!</h1>\r\n        </Row>\r\n        <Row className='justify-content-center'>\r\n          <Col>\r\n            <Card>\r\n              <Card.Body>\r\n                <Card.Title>Danny Serrano</Card.Title>\r\n                <Card.Link>LinkedIn</Card.Link>\r\n                <Card.Link>Github</Card.Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Card>\r\n            <Card.Body>\r\n                <Card.Title>Natalie Rojas</Card.Title>\r\n                <Card.Link>LinkedIn</Card.Link>\r\n                <Card.Link>Github</Card.Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <Card>\r\n            <Card.Body>\r\n                <Card.Title>Marjorie Meija</Card.Title>\r\n                <Card.Link>LinkedIn</Card.Link>\r\n                <Card.Link>Github</Card.Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n    </Container >\r\n  );\r\n}\r\n","import Recipes from '../components/Recipes';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport SingleRecipe from '../components/SingleRecipe';\r\nimport HomePage from './HomePage'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Badge from 'react-bootstrap/Badge'\r\n\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <>\r\n      <Navbar collapseOnSelect expand=\"lg\" id='nav'>\r\n        <Container>\r\n          <Navbar.Brand href=\"/\">Recipe Finder</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto container-fluid\">\r\n              <Nav.Link href=\"/#creators\">Creators</Nav.Link>\r\n              <Nav.Link href=\"/#contact\">Contact</Nav.Link>\r\n              <Nav.Link href=\"/recipes\"><Badge variant=\"secondary\">Search new recipes</Badge></Nav.Link>\r\n              <Nav.Link href=\"/recipes\" className='ml-auto'><Badge variant=\"info\" >Check out Mintbean</Badge></Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <Switch>\r\n        <Route exact path='/' component={HomePage} />\r\n        <Route exact path='/recipes' component={Recipes} />\r\n        <Route exact path='/recipes/:recipeId' component={SingleRecipe} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { client } from \"./utils/client\";\r\nimport Routes from \"./pages/Routes\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.css\";\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <Routes />\r\n      </Router>\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}